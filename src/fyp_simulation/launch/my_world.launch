<?xml version="1.0" encoding="UTF-8" ?>
<launch>
	<!-- sync teims -->
	<param name="/use_sim_time" value="true" />

        <!-- overwriting these args -->
        <arg name="debug" default="false" />
        <arg name="gui" default="true" />
        <arg name="pause" default="false" />
	<arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
	<arg name="world_type" default="FYP" />
	<arg name="map_type" default="1" />
        <arg name="world" default="$(find fyp_simulation)/worlds/$(arg world_type)_world.world" />
	<arg name="robot_name" value="robot_1" />

        <!-- include gazebo_ros launcher -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
                <arg name="world_name" value="$(arg world)" />
                <arg name="debug" value="$(arg debug)" />
                <arg name="gui" value="$(arg gui)" />
                <arg name="paused" value="$(arg pause)" />
                <arg name="use_sim_time" value="true" /> 
        </include>

	<!-- gazebo SPAWN -->
  	
	<include file="$(find fyp_simulation)/launch/fyp_spawn.launch">
	<arg name="robot_name" value="$(arg robot_name)"/>
	<arg name="init_pose" value="-x -7.0 -y -3.0 -z 0.0"/>
	<arg name="model" value="$(arg model)"/>
	</include>  

	<!-- frontier exploration 

	<include file="$(find turtlebot3_slam)/launch/turtlebot3_frontier_exploration.launch">
	</include>	-->

	<!-- 2D mapping and move base -->

	<include file="$(find turtlebot3_navigation)/launch/turtlebot3_navigation.launch">
		<arg name="map_file" value="$(find fyp_simulation)/map/$(arg map_type)_map.yaml"/>
	</include> 

	<!--   CVA Sequencer Node 

	<node name="CVA_sequencer" pkg="fyp_simulation" type="CVA_sequencer"/>-->
	
	<!--launch rviz  

  	<include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    		<arg name="model" value="$(arg model)" />
  	</include> -->

	<!--<group if="$(arg foo)">
		
		<node pkg="rosservice" type="rosservice" name="robotdespawn" args="call gazebo/delete_model '{model_name: robot_1}'" />	
		<node pkg="rosservice" type="rosservice" name="modeldespawn" args="call gazebo/delete_model '{model_name: 1_house}'" />

	</group>-->

	<!-- octomap -->

 	<!--<include file="$(find fremen)/launch/octomap.launch"/>

	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find fyp_nav_rvis)/rviz/FYP_rvis.rviz" >
	</node>-->

</launch>
